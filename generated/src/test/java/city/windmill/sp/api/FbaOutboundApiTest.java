/*
 * Selling Partner API for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package city.windmill.sp.api;

import city.windmill.sp.ApiException;
import city.windmill.sp.model.CancelFulfillmentOrderResponse;
import city.windmill.sp.model.CreateFulfillmentOrderRequest;
import city.windmill.sp.model.CreateFulfillmentOrderResponse;
import city.windmill.sp.model.CreateFulfillmentReturnRequest;
import city.windmill.sp.model.CreateFulfillmentReturnResponse;
import city.windmill.sp.model.GetFulfillmentOrderResponse;
import city.windmill.sp.model.GetFulfillmentPreviewRequest;
import city.windmill.sp.model.GetFulfillmentPreviewResponse;
import city.windmill.sp.model.GetPackageTrackingDetailsResponse;
import city.windmill.sp.model.ListAllFulfillmentOrdersResponse;
import city.windmill.sp.model.ListReturnReasonCodesResponse;
import java.time.OffsetDateTime;
import city.windmill.sp.model.UpdateFulfillmentOrderRequest;
import city.windmill.sp.model.UpdateFulfillmentOrderResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FbaOutboundApi
 */
@Ignore
public class FbaOutboundApiTest {

    private final FbaOutboundApi api = new FbaOutboundApi();

    
    /**
     * 
     *
     * Requests that Amazon stop attempting to fulfill the fulfillment order indicated by the specified order identifier.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cancelFulfillmentOrderTest() throws ApiException {
        String sellerFulfillmentOrderId = null;
        CancelFulfillmentOrderResponse response = api.cancelFulfillmentOrder(sellerFulfillmentOrderId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Requests that Amazon ship items from the seller&#39;s inventory in Amazon&#39;s fulfillment network to a destination address.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createFulfillmentOrderTest() throws ApiException {
        CreateFulfillmentOrderRequest body = null;
        CreateFulfillmentOrderResponse response = api.createFulfillmentOrder(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Creates a fulfillment return.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createFulfillmentReturnTest() throws ApiException {
        CreateFulfillmentReturnRequest body = null;
        String sellerFulfillmentOrderId = null;
        CreateFulfillmentReturnResponse response = api.createFulfillmentReturn(body, sellerFulfillmentOrderId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns the fulfillment order indicated by the specified order identifier.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFulfillmentOrderTest() throws ApiException {
        String sellerFulfillmentOrderId = null;
        GetFulfillmentOrderResponse response = api.getFulfillmentOrder(sellerFulfillmentOrderId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a list of fulfillment order previews based on shipping criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFulfillmentPreviewTest() throws ApiException {
        GetFulfillmentPreviewRequest body = null;
        GetFulfillmentPreviewResponse response = api.getFulfillmentPreview(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns delivery tracking information for a package in an outbound shipment for a Multi-Channel Fulfillment order.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPackageTrackingDetailsTest() throws ApiException {
        Integer packageNumber = null;
        GetPackageTrackingDetailsResponse response = api.getPackageTrackingDetails(packageNumber);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a list of fulfillment orders fulfilled after (or at) a specified date-time, or indicated by the next token parameter.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAllFulfillmentOrdersTest() throws ApiException {
        OffsetDateTime queryStartDateTime = null;
        List<String> fulfillmentMethod = null;
        String nextToken = null;
        ListAllFulfillmentOrdersResponse response = api.listAllFulfillmentOrders(queryStartDateTime, fulfillmentMethod, nextToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a list of return reason codes for a seller SKU in a given marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listReturnReasonCodesTest() throws ApiException {
        String sellerSKU = null;
        String language = null;
        String marketplaceId = null;
        String sellerFulfillmentOrderId = null;
        ListReturnReasonCodesResponse response = api.listReturnReasonCodes(sellerSKU, language, marketplaceId, sellerFulfillmentOrderId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Updates and/or requests shipment for a fulfillment order with an order hold on it.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateFulfillmentOrderTest() throws ApiException {
        UpdateFulfillmentOrderRequest body = null;
        String sellerFulfillmentOrderId = null;
        UpdateFulfillmentOrderResponse response = api.updateFulfillmentOrder(body, sellerFulfillmentOrderId);

        // TODO: test validations
    }
    
}
