/*
 * Selling Partner API for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package city.windmill.sp.model;

import java.util.Objects;
import java.util.Arrays;
import city.windmill.sp.model.AdditionalLocationInfo;
import city.windmill.sp.model.CurrentStatus;
import city.windmill.sp.model.TrackingAddress;
import city.windmill.sp.model.TrackingEventList;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PackageTrackingDetails
 */




public class PackageTrackingDetails {
  @SerializedName("PackageNumber")
  private Integer packageNumber = null;

  @SerializedName("TrackingNumber")
  private String trackingNumber = null;

  @SerializedName("CarrierCode")
  private String carrierCode = null;

  @SerializedName("CarrierPhoneNumber")
  private String carrierPhoneNumber = null;

  @SerializedName("CarrierURL")
  private String carrierURL = null;

  @SerializedName("ShipDate")
  private String shipDate = null;

  @SerializedName("EstimatedArrivalDate")
  private String estimatedArrivalDate = null;

  @SerializedName("ShipToAddress")
  private TrackingAddress shipToAddress = null;

  @SerializedName("CurrentStatus")
  private CurrentStatus currentStatus = null;

  @SerializedName("SignedForBy")
  private String signedForBy = null;

  @SerializedName("AdditionalLocationInfo")
  private AdditionalLocationInfo additionalLocationInfo = null;

  @SerializedName("TrackingEvents")
  private TrackingEventList trackingEvents = null;

  public PackageTrackingDetails packageNumber(Integer packageNumber) {
    this.packageNumber = packageNumber;
    return this;
  }

   /**
   * The package identifier.
   * @return packageNumber
  **/
  @ApiModelProperty(required = true, value = "The package identifier.")
  public Integer getPackageNumber() {
    return packageNumber;
  }

  public void setPackageNumber(Integer packageNumber) {
    this.packageNumber = packageNumber;
  }

  public PackageTrackingDetails trackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
    return this;
  }

   /**
   * The tracking number for the package.
   * @return trackingNumber
  **/
  @ApiModelProperty(value = "The tracking number for the package.")
  public String getTrackingNumber() {
    return trackingNumber;
  }

  public void setTrackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
  }

  public PackageTrackingDetails carrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
    return this;
  }

   /**
   * The name of the carrier.
   * @return carrierCode
  **/
  @ApiModelProperty(value = "The name of the carrier.")
  public String getCarrierCode() {
    return carrierCode;
  }

  public void setCarrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
  }

  public PackageTrackingDetails carrierPhoneNumber(String carrierPhoneNumber) {
    this.carrierPhoneNumber = carrierPhoneNumber;
    return this;
  }

   /**
   * The phone number of the carrier.
   * @return carrierPhoneNumber
  **/
  @ApiModelProperty(value = "The phone number of the carrier.")
  public String getCarrierPhoneNumber() {
    return carrierPhoneNumber;
  }

  public void setCarrierPhoneNumber(String carrierPhoneNumber) {
    this.carrierPhoneNumber = carrierPhoneNumber;
  }

  public PackageTrackingDetails carrierURL(String carrierURL) {
    this.carrierURL = carrierURL;
    return this;
  }

   /**
   * The URL of the carrier’s website.
   * @return carrierURL
  **/
  @ApiModelProperty(value = "The URL of the carrier’s website.")
  public String getCarrierURL() {
    return carrierURL;
  }

  public void setCarrierURL(String carrierURL) {
    this.carrierURL = carrierURL;
  }

  public PackageTrackingDetails shipDate(String shipDate) {
    this.shipDate = shipDate;
    return this;
  }

   /**
   * The shipping date for the package.
   * @return shipDate
  **/
  @ApiModelProperty(value = "The shipping date for the package.")
  public String getShipDate() {
    return shipDate;
  }

  public void setShipDate(String shipDate) {
    this.shipDate = shipDate;
  }

  public PackageTrackingDetails estimatedArrivalDate(String estimatedArrivalDate) {
    this.estimatedArrivalDate = estimatedArrivalDate;
    return this;
  }

   /**
   * The estimated arrival date.
   * @return estimatedArrivalDate
  **/
  @ApiModelProperty(value = "The estimated arrival date.")
  public String getEstimatedArrivalDate() {
    return estimatedArrivalDate;
  }

  public void setEstimatedArrivalDate(String estimatedArrivalDate) {
    this.estimatedArrivalDate = estimatedArrivalDate;
  }

  public PackageTrackingDetails shipToAddress(TrackingAddress shipToAddress) {
    this.shipToAddress = shipToAddress;
    return this;
  }

   /**
   * The destination city for the package.
   * @return shipToAddress
  **/
  @ApiModelProperty(value = "The destination city for the package.")
  public TrackingAddress getShipToAddress() {
    return shipToAddress;
  }

  public void setShipToAddress(TrackingAddress shipToAddress) {
    this.shipToAddress = shipToAddress;
  }

  public PackageTrackingDetails currentStatus(CurrentStatus currentStatus) {
    this.currentStatus = currentStatus;
    return this;
  }

   /**
   * Get currentStatus
   * @return currentStatus
  **/
  @ApiModelProperty(value = "")
  public CurrentStatus getCurrentStatus() {
    return currentStatus;
  }

  public void setCurrentStatus(CurrentStatus currentStatus) {
    this.currentStatus = currentStatus;
  }

  public PackageTrackingDetails signedForBy(String signedForBy) {
    this.signedForBy = signedForBy;
    return this;
  }

   /**
   * The name of the person who signed for the package.
   * @return signedForBy
  **/
  @ApiModelProperty(value = "The name of the person who signed for the package.")
  public String getSignedForBy() {
    return signedForBy;
  }

  public void setSignedForBy(String signedForBy) {
    this.signedForBy = signedForBy;
  }

  public PackageTrackingDetails additionalLocationInfo(AdditionalLocationInfo additionalLocationInfo) {
    this.additionalLocationInfo = additionalLocationInfo;
    return this;
  }

   /**
   * Get additionalLocationInfo
   * @return additionalLocationInfo
  **/
  @ApiModelProperty(value = "")
  public AdditionalLocationInfo getAdditionalLocationInfo() {
    return additionalLocationInfo;
  }

  public void setAdditionalLocationInfo(AdditionalLocationInfo additionalLocationInfo) {
    this.additionalLocationInfo = additionalLocationInfo;
  }

  public PackageTrackingDetails trackingEvents(TrackingEventList trackingEvents) {
    this.trackingEvents = trackingEvents;
    return this;
  }

   /**
   * Get trackingEvents
   * @return trackingEvents
  **/
  @ApiModelProperty(value = "")
  public TrackingEventList getTrackingEvents() {
    return trackingEvents;
  }

  public void setTrackingEvents(TrackingEventList trackingEvents) {
    this.trackingEvents = trackingEvents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackageTrackingDetails packageTrackingDetails = (PackageTrackingDetails) o;
    return Objects.equals(this.packageNumber, packageTrackingDetails.packageNumber) &&
        Objects.equals(this.trackingNumber, packageTrackingDetails.trackingNumber) &&
        Objects.equals(this.carrierCode, packageTrackingDetails.carrierCode) &&
        Objects.equals(this.carrierPhoneNumber, packageTrackingDetails.carrierPhoneNumber) &&
        Objects.equals(this.carrierURL, packageTrackingDetails.carrierURL) &&
        Objects.equals(this.shipDate, packageTrackingDetails.shipDate) &&
        Objects.equals(this.estimatedArrivalDate, packageTrackingDetails.estimatedArrivalDate) &&
        Objects.equals(this.shipToAddress, packageTrackingDetails.shipToAddress) &&
        Objects.equals(this.currentStatus, packageTrackingDetails.currentStatus) &&
        Objects.equals(this.signedForBy, packageTrackingDetails.signedForBy) &&
        Objects.equals(this.additionalLocationInfo, packageTrackingDetails.additionalLocationInfo) &&
        Objects.equals(this.trackingEvents, packageTrackingDetails.trackingEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(packageNumber, trackingNumber, carrierCode, carrierPhoneNumber, carrierURL, shipDate, estimatedArrivalDate, shipToAddress, currentStatus, signedForBy, additionalLocationInfo, trackingEvents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackageTrackingDetails {\n");
    
    sb.append("    packageNumber: ").append(toIndentedString(packageNumber)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    carrierCode: ").append(toIndentedString(carrierCode)).append("\n");
    sb.append("    carrierPhoneNumber: ").append(toIndentedString(carrierPhoneNumber)).append("\n");
    sb.append("    carrierURL: ").append(toIndentedString(carrierURL)).append("\n");
    sb.append("    shipDate: ").append(toIndentedString(shipDate)).append("\n");
    sb.append("    estimatedArrivalDate: ").append(toIndentedString(estimatedArrivalDate)).append("\n");
    sb.append("    shipToAddress: ").append(toIndentedString(shipToAddress)).append("\n");
    sb.append("    currentStatus: ").append(toIndentedString(currentStatus)).append("\n");
    sb.append("    signedForBy: ").append(toIndentedString(signedForBy)).append("\n");
    sb.append("    additionalLocationInfo: ").append(toIndentedString(additionalLocationInfo)).append("\n");
    sb.append("    trackingEvents: ").append(toIndentedString(trackingEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

