/*
 * Selling Partner API for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package city.windmill.sp.model;

import java.util.Objects;
import java.util.Arrays;
import city.windmill.sp.model.Weight;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Item information for a shipment in a fulfillment order preview.
 */
@ApiModel(description = "Item information for a shipment in a fulfillment order preview.")




public class FulfillmentPreviewItem {
  @SerializedName("SellerSKU")
  private String sellerSKU = null;

  @SerializedName("Quantity")
  private Integer quantity = null;

  @SerializedName("SellerFulfillmentOrderItemId")
  private String sellerFulfillmentOrderItemId = null;

  @SerializedName("EstimatedShippingWeight")
  private Weight estimatedShippingWeight = null;

  /**
   * The method used to calculate EstimatedShippingWeight.
   */
  @JsonAdapter(ShippingWeightCalculationMethodEnum.Adapter.class)
  public enum ShippingWeightCalculationMethodEnum {
    PACKAGE("Package"),
    
    DIMENSIONAL("Dimensional");

    private String value;

    ShippingWeightCalculationMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ShippingWeightCalculationMethodEnum fromValue(String text) {
      for (ShippingWeightCalculationMethodEnum b : ShippingWeightCalculationMethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ShippingWeightCalculationMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ShippingWeightCalculationMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ShippingWeightCalculationMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ShippingWeightCalculationMethodEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("ShippingWeightCalculationMethod")
  private ShippingWeightCalculationMethodEnum shippingWeightCalculationMethod = null;

  public FulfillmentPreviewItem sellerSKU(String sellerSKU) {
    this.sellerSKU = sellerSKU;
    return this;
  }

   /**
   * The seller SKU of the item.
   * @return sellerSKU
  **/
  @ApiModelProperty(required = true, value = "The seller SKU of the item.")
  public String getSellerSKU() {
    return sellerSKU;
  }

  public void setSellerSKU(String sellerSKU) {
    this.sellerSKU = sellerSKU;
  }

  public FulfillmentPreviewItem quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * The item quantity.
   * @return quantity
  **/
  @ApiModelProperty(required = true, value = "The item quantity.")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public FulfillmentPreviewItem sellerFulfillmentOrderItemId(String sellerFulfillmentOrderItemId) {
    this.sellerFulfillmentOrderItemId = sellerFulfillmentOrderItemId;
    return this;
  }

   /**
   * A fulfillment order item identifier that the seller created with a call to the createFulfillmentOrder operation.
   * @return sellerFulfillmentOrderItemId
  **/
  @ApiModelProperty(required = true, value = "A fulfillment order item identifier that the seller created with a call to the createFulfillmentOrder operation.")
  public String getSellerFulfillmentOrderItemId() {
    return sellerFulfillmentOrderItemId;
  }

  public void setSellerFulfillmentOrderItemId(String sellerFulfillmentOrderItemId) {
    this.sellerFulfillmentOrderItemId = sellerFulfillmentOrderItemId;
  }

  public FulfillmentPreviewItem estimatedShippingWeight(Weight estimatedShippingWeight) {
    this.estimatedShippingWeight = estimatedShippingWeight;
    return this;
  }

   /**
   * The estimated shipping weight of the item quantity for a single item, as identified by sellerSKU, in a shipment.
   * @return estimatedShippingWeight
  **/
  @ApiModelProperty(value = "The estimated shipping weight of the item quantity for a single item, as identified by sellerSKU, in a shipment.")
  public Weight getEstimatedShippingWeight() {
    return estimatedShippingWeight;
  }

  public void setEstimatedShippingWeight(Weight estimatedShippingWeight) {
    this.estimatedShippingWeight = estimatedShippingWeight;
  }

  public FulfillmentPreviewItem shippingWeightCalculationMethod(ShippingWeightCalculationMethodEnum shippingWeightCalculationMethod) {
    this.shippingWeightCalculationMethod = shippingWeightCalculationMethod;
    return this;
  }

   /**
   * The method used to calculate EstimatedShippingWeight.
   * @return shippingWeightCalculationMethod
  **/
  @ApiModelProperty(value = "The method used to calculate EstimatedShippingWeight.")
  public ShippingWeightCalculationMethodEnum getShippingWeightCalculationMethod() {
    return shippingWeightCalculationMethod;
  }

  public void setShippingWeightCalculationMethod(ShippingWeightCalculationMethodEnum shippingWeightCalculationMethod) {
    this.shippingWeightCalculationMethod = shippingWeightCalculationMethod;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FulfillmentPreviewItem fulfillmentPreviewItem = (FulfillmentPreviewItem) o;
    return Objects.equals(this.sellerSKU, fulfillmentPreviewItem.sellerSKU) &&
        Objects.equals(this.quantity, fulfillmentPreviewItem.quantity) &&
        Objects.equals(this.sellerFulfillmentOrderItemId, fulfillmentPreviewItem.sellerFulfillmentOrderItemId) &&
        Objects.equals(this.estimatedShippingWeight, fulfillmentPreviewItem.estimatedShippingWeight) &&
        Objects.equals(this.shippingWeightCalculationMethod, fulfillmentPreviewItem.shippingWeightCalculationMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sellerSKU, quantity, sellerFulfillmentOrderItemId, estimatedShippingWeight, shippingWeightCalculationMethod);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FulfillmentPreviewItem {\n");
    
    sb.append("    sellerSKU: ").append(toIndentedString(sellerSKU)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    sellerFulfillmentOrderItemId: ").append(toIndentedString(sellerFulfillmentOrderItemId)).append("\n");
    sb.append("    estimatedShippingWeight: ").append(toIndentedString(estimatedShippingWeight)).append("\n");
    sb.append("    shippingWeightCalculationMethod: ").append(toIndentedString(shippingWeightCalculationMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

