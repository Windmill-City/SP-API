/*
 * Selling Partner API for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package city.windmill.sp.model;

import java.util.Objects;
import java.util.Arrays;
import city.windmill.sp.model.Address;
import city.windmill.sp.model.CODSettings;
import city.windmill.sp.model.CreateFulfillmentOrderItemList;
import city.windmill.sp.model.DeliveryWindow;
import city.windmill.sp.model.FulfillmentAction;
import city.windmill.sp.model.FulfillmentPolicy;
import city.windmill.sp.model.NotificationEmailList;
import city.windmill.sp.model.ShippingSpeedCategory;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The request body schema for the createFulfillmentOrder operation.
 */
@ApiModel(description = "The request body schema for the createFulfillmentOrder operation.")




public class CreateFulfillmentOrderRequest {
  @SerializedName("MarketplaceId")
  private String marketplaceId = null;

  @SerializedName("SellerFulfillmentOrderId")
  private String sellerFulfillmentOrderId = null;

  @SerializedName("DisplayableOrderId")
  private String displayableOrderId = null;

  @SerializedName("DisplayableOrderDateTime")
  private String displayableOrderDateTime = null;

  @SerializedName("DisplayableOrderComment")
  private String displayableOrderComment = null;

  @SerializedName("ShippingSpeedCategory")
  private ShippingSpeedCategory shippingSpeedCategory = null;

  @SerializedName("DeliveryWindow")
  private DeliveryWindow deliveryWindow = null;

  @SerializedName("DestinationAddress")
  private Address destinationAddress = null;

  @SerializedName("FulfillmentAction")
  private FulfillmentAction fulfillmentAction = null;

  @SerializedName("FulfillmentPolicy")
  private FulfillmentPolicy fulfillmentPolicy = null;

  @SerializedName("FulfillmentMethod")
  private String fulfillmentMethod = null;

  @SerializedName("CODSettings")
  private CODSettings coDSettings = null;

  @SerializedName("ShipFromCountryCode")
  private String shipFromCountryCode = null;

  @SerializedName("NotificationEmailList")
  private NotificationEmailList notificationEmailList = null;

  @SerializedName("Items")
  private CreateFulfillmentOrderItemList items = null;

  public CreateFulfillmentOrderRequest marketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
    return this;
  }

   /**
   * The marketplace the fulfillment order is placed against.
   * @return marketplaceId
  **/
  @ApiModelProperty(value = "The marketplace the fulfillment order is placed against.")
  public String getMarketplaceId() {
    return marketplaceId;
  }

  public void setMarketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
  }

  public CreateFulfillmentOrderRequest sellerFulfillmentOrderId(String sellerFulfillmentOrderId) {
    this.sellerFulfillmentOrderId = sellerFulfillmentOrderId;
    return this;
  }

   /**
   * A fulfillment order identifier that the seller creates to track their fulfillment order. The SellerFulfillmentOrderId must be unique for each fulfillment order that a seller creates. If the seller&#39;s system already creates unique order identifiers, then these might be good values for them to use.
   * @return sellerFulfillmentOrderId
  **/
  @ApiModelProperty(required = true, value = "A fulfillment order identifier that the seller creates to track their fulfillment order. The SellerFulfillmentOrderId must be unique for each fulfillment order that a seller creates. If the seller's system already creates unique order identifiers, then these might be good values for them to use.")
  public String getSellerFulfillmentOrderId() {
    return sellerFulfillmentOrderId;
  }

  public void setSellerFulfillmentOrderId(String sellerFulfillmentOrderId) {
    this.sellerFulfillmentOrderId = sellerFulfillmentOrderId;
  }

  public CreateFulfillmentOrderRequest displayableOrderId(String displayableOrderId) {
    this.displayableOrderId = displayableOrderId;
    return this;
  }

   /**
   * A fulfillment order identifier that the seller creates. This value displays as the order identifier in recipient-facing materials such as the outbound shipment packing slip. The value of DisplayableOrderId should match the order identifier that the seller provides to the recipient. The seller can use the SellerFulfillmentOrderId for this value or they can specify an alternate value if they want the recipient to reference an alternate order identifier.  The value must be an alpha-numeric or ISO 8859-1 compliant string from one to 40 characters in length. Cannot contain two spaces in a row. Leading and trailing white space is removed.
   * @return displayableOrderId
  **/
  @ApiModelProperty(required = true, value = "A fulfillment order identifier that the seller creates. This value displays as the order identifier in recipient-facing materials such as the outbound shipment packing slip. The value of DisplayableOrderId should match the order identifier that the seller provides to the recipient. The seller can use the SellerFulfillmentOrderId for this value or they can specify an alternate value if they want the recipient to reference an alternate order identifier.  The value must be an alpha-numeric or ISO 8859-1 compliant string from one to 40 characters in length. Cannot contain two spaces in a row. Leading and trailing white space is removed.")
  public String getDisplayableOrderId() {
    return displayableOrderId;
  }

  public void setDisplayableOrderId(String displayableOrderId) {
    this.displayableOrderId = displayableOrderId;
  }

  public CreateFulfillmentOrderRequest displayableOrderDateTime(String displayableOrderDateTime) {
    this.displayableOrderDateTime = displayableOrderDateTime;
    return this;
  }

   /**
   * The date and time of the fulfillment order. Displays as the order date in recipient-facing materials such as the outbound shipment packing slip.
   * @return displayableOrderDateTime
  **/
  @ApiModelProperty(required = true, value = "The date and time of the fulfillment order. Displays as the order date in recipient-facing materials such as the outbound shipment packing slip.")
  public String getDisplayableOrderDateTime() {
    return displayableOrderDateTime;
  }

  public void setDisplayableOrderDateTime(String displayableOrderDateTime) {
    this.displayableOrderDateTime = displayableOrderDateTime;
  }

  public CreateFulfillmentOrderRequest displayableOrderComment(String displayableOrderComment) {
    this.displayableOrderComment = displayableOrderComment;
    return this;
  }

   /**
   * Order-specific text that appears in recipient-facing materials such as the outbound shipment packing slip.
   * @return displayableOrderComment
  **/
  @ApiModelProperty(required = true, value = "Order-specific text that appears in recipient-facing materials such as the outbound shipment packing slip.")
  public String getDisplayableOrderComment() {
    return displayableOrderComment;
  }

  public void setDisplayableOrderComment(String displayableOrderComment) {
    this.displayableOrderComment = displayableOrderComment;
  }

  public CreateFulfillmentOrderRequest shippingSpeedCategory(ShippingSpeedCategory shippingSpeedCategory) {
    this.shippingSpeedCategory = shippingSpeedCategory;
    return this;
  }

   /**
   * The shipping method for the fulfillment order.
   * @return shippingSpeedCategory
  **/
  @ApiModelProperty(required = true, value = "The shipping method for the fulfillment order.")
  public ShippingSpeedCategory getShippingSpeedCategory() {
    return shippingSpeedCategory;
  }

  public void setShippingSpeedCategory(ShippingSpeedCategory shippingSpeedCategory) {
    this.shippingSpeedCategory = shippingSpeedCategory;
  }

  public CreateFulfillmentOrderRequest deliveryWindow(DeliveryWindow deliveryWindow) {
    this.deliveryWindow = deliveryWindow;
    return this;
  }

   /**
   * Get deliveryWindow
   * @return deliveryWindow
  **/
  @ApiModelProperty(value = "")
  public DeliveryWindow getDeliveryWindow() {
    return deliveryWindow;
  }

  public void setDeliveryWindow(DeliveryWindow deliveryWindow) {
    this.deliveryWindow = deliveryWindow;
  }

  public CreateFulfillmentOrderRequest destinationAddress(Address destinationAddress) {
    this.destinationAddress = destinationAddress;
    return this;
  }

   /**
   * The destination address for the fulfillment order.
   * @return destinationAddress
  **/
  @ApiModelProperty(required = true, value = "The destination address for the fulfillment order.")
  public Address getDestinationAddress() {
    return destinationAddress;
  }

  public void setDestinationAddress(Address destinationAddress) {
    this.destinationAddress = destinationAddress;
  }

  public CreateFulfillmentOrderRequest fulfillmentAction(FulfillmentAction fulfillmentAction) {
    this.fulfillmentAction = fulfillmentAction;
    return this;
  }

   /**
   * Get fulfillmentAction
   * @return fulfillmentAction
  **/
  @ApiModelProperty(value = "")
  public FulfillmentAction getFulfillmentAction() {
    return fulfillmentAction;
  }

  public void setFulfillmentAction(FulfillmentAction fulfillmentAction) {
    this.fulfillmentAction = fulfillmentAction;
  }

  public CreateFulfillmentOrderRequest fulfillmentPolicy(FulfillmentPolicy fulfillmentPolicy) {
    this.fulfillmentPolicy = fulfillmentPolicy;
    return this;
  }

   /**
   * Get fulfillmentPolicy
   * @return fulfillmentPolicy
  **/
  @ApiModelProperty(value = "")
  public FulfillmentPolicy getFulfillmentPolicy() {
    return fulfillmentPolicy;
  }

  public void setFulfillmentPolicy(FulfillmentPolicy fulfillmentPolicy) {
    this.fulfillmentPolicy = fulfillmentPolicy;
  }

  public CreateFulfillmentOrderRequest fulfillmentMethod(String fulfillmentMethod) {
    this.fulfillmentMethod = fulfillmentMethod;
    return this;
  }

   /**
   * Indicates the intended recipient channel for the order.
   * @return fulfillmentMethod
  **/
  @ApiModelProperty(value = "Indicates the intended recipient channel for the order.")
  public String getFulfillmentMethod() {
    return fulfillmentMethod;
  }

  public void setFulfillmentMethod(String fulfillmentMethod) {
    this.fulfillmentMethod = fulfillmentMethod;
  }

  public CreateFulfillmentOrderRequest coDSettings(CODSettings coDSettings) {
    this.coDSettings = coDSettings;
    return this;
  }

   /**
   * Get coDSettings
   * @return coDSettings
  **/
  @ApiModelProperty(value = "")
  public CODSettings getCoDSettings() {
    return coDSettings;
  }

  public void setCoDSettings(CODSettings coDSettings) {
    this.coDSettings = coDSettings;
  }

  public CreateFulfillmentOrderRequest shipFromCountryCode(String shipFromCountryCode) {
    this.shipFromCountryCode = shipFromCountryCode;
    return this;
  }

   /**
   * The two-character country code for the country from which the fulfillment order ships. Must be in ISO 3166-1 alpha-2 format.
   * @return shipFromCountryCode
  **/
  @ApiModelProperty(value = "The two-character country code for the country from which the fulfillment order ships. Must be in ISO 3166-1 alpha-2 format.")
  public String getShipFromCountryCode() {
    return shipFromCountryCode;
  }

  public void setShipFromCountryCode(String shipFromCountryCode) {
    this.shipFromCountryCode = shipFromCountryCode;
  }

  public CreateFulfillmentOrderRequest notificationEmailList(NotificationEmailList notificationEmailList) {
    this.notificationEmailList = notificationEmailList;
    return this;
  }

   /**
   * Get notificationEmailList
   * @return notificationEmailList
  **/
  @ApiModelProperty(value = "")
  public NotificationEmailList getNotificationEmailList() {
    return notificationEmailList;
  }

  public void setNotificationEmailList(NotificationEmailList notificationEmailList) {
    this.notificationEmailList = notificationEmailList;
  }

  public CreateFulfillmentOrderRequest items(CreateFulfillmentOrderItemList items) {
    this.items = items;
    return this;
  }

   /**
   * A list of items to include in the fulfillment order preview, including quantity.
   * @return items
  **/
  @ApiModelProperty(required = true, value = "A list of items to include in the fulfillment order preview, including quantity.")
  public CreateFulfillmentOrderItemList getItems() {
    return items;
  }

  public void setItems(CreateFulfillmentOrderItemList items) {
    this.items = items;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFulfillmentOrderRequest createFulfillmentOrderRequest = (CreateFulfillmentOrderRequest) o;
    return Objects.equals(this.marketplaceId, createFulfillmentOrderRequest.marketplaceId) &&
        Objects.equals(this.sellerFulfillmentOrderId, createFulfillmentOrderRequest.sellerFulfillmentOrderId) &&
        Objects.equals(this.displayableOrderId, createFulfillmentOrderRequest.displayableOrderId) &&
        Objects.equals(this.displayableOrderDateTime, createFulfillmentOrderRequest.displayableOrderDateTime) &&
        Objects.equals(this.displayableOrderComment, createFulfillmentOrderRequest.displayableOrderComment) &&
        Objects.equals(this.shippingSpeedCategory, createFulfillmentOrderRequest.shippingSpeedCategory) &&
        Objects.equals(this.deliveryWindow, createFulfillmentOrderRequest.deliveryWindow) &&
        Objects.equals(this.destinationAddress, createFulfillmentOrderRequest.destinationAddress) &&
        Objects.equals(this.fulfillmentAction, createFulfillmentOrderRequest.fulfillmentAction) &&
        Objects.equals(this.fulfillmentPolicy, createFulfillmentOrderRequest.fulfillmentPolicy) &&
        Objects.equals(this.fulfillmentMethod, createFulfillmentOrderRequest.fulfillmentMethod) &&
        Objects.equals(this.coDSettings, createFulfillmentOrderRequest.coDSettings) &&
        Objects.equals(this.shipFromCountryCode, createFulfillmentOrderRequest.shipFromCountryCode) &&
        Objects.equals(this.notificationEmailList, createFulfillmentOrderRequest.notificationEmailList) &&
        Objects.equals(this.items, createFulfillmentOrderRequest.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(marketplaceId, sellerFulfillmentOrderId, displayableOrderId, displayableOrderDateTime, displayableOrderComment, shippingSpeedCategory, deliveryWindow, destinationAddress, fulfillmentAction, fulfillmentPolicy, fulfillmentMethod, coDSettings, shipFromCountryCode, notificationEmailList, items);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFulfillmentOrderRequest {\n");
    
    sb.append("    marketplaceId: ").append(toIndentedString(marketplaceId)).append("\n");
    sb.append("    sellerFulfillmentOrderId: ").append(toIndentedString(sellerFulfillmentOrderId)).append("\n");
    sb.append("    displayableOrderId: ").append(toIndentedString(displayableOrderId)).append("\n");
    sb.append("    displayableOrderDateTime: ").append(toIndentedString(displayableOrderDateTime)).append("\n");
    sb.append("    displayableOrderComment: ").append(toIndentedString(displayableOrderComment)).append("\n");
    sb.append("    shippingSpeedCategory: ").append(toIndentedString(shippingSpeedCategory)).append("\n");
    sb.append("    deliveryWindow: ").append(toIndentedString(deliveryWindow)).append("\n");
    sb.append("    destinationAddress: ").append(toIndentedString(destinationAddress)).append("\n");
    sb.append("    fulfillmentAction: ").append(toIndentedString(fulfillmentAction)).append("\n");
    sb.append("    fulfillmentPolicy: ").append(toIndentedString(fulfillmentPolicy)).append("\n");
    sb.append("    fulfillmentMethod: ").append(toIndentedString(fulfillmentMethod)).append("\n");
    sb.append("    coDSettings: ").append(toIndentedString(coDSettings)).append("\n");
    sb.append("    shipFromCountryCode: ").append(toIndentedString(shipFromCountryCode)).append("\n");
    sb.append("    notificationEmailList: ").append(toIndentedString(notificationEmailList)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

